require 'time'
require 'open-uri'
require 'fileutils'

module HealthCheck
  class Downloader
    def initialize(options = {})
      @data_dir = options[:data_dir] || File.dirname(__FILE__) + "/../../data"
      @logger = options[:logger] || Logging.logger[self]
    end

    def download(*indices)
      indices = %w{mainstream detailed government} unless indices.any?
      indices.each do |index_name|
        write(index_name, fetch_data(index_name))
      end
    end

  private
    def gid(index_name)
      case index_name
      when "mainstream" then "0"
      when "government" then "2"
      when "detailed" then "3"
      else
        raise "Unknown index #{index_name}"
      end
    end

    def output_filename(index_name)
      "#{@data_dir}/#{index_name}-weighted-search-terms.csv"
    end

    def url(index_name)
      # Link generated by going to:
      #   File
      #     Publish to the web
      #       Get a link to the published data
      #          then choose CSV
      gid = gid(index_name)
      "https://docs.google.com/spreadsheet/pub?key=0AmD7K4ab1dYrdDR5c2tITTNHRUZqajFTTU8wODAzZ1E&single=true&output=csv&gid=#{gid}"
    end

    def fetch_data(index_name)
      url = url(index_name)
      data = open(url).read
      @logger.info "Downloaded #{url}"
      data
    end

    def write(index_name, data)
      filename = output_filename(index_name)
      File.open(filename, "wb") do |file|
        file.write(data)
        @logger.info "Wrote #{filename}"
      end
    end
  end
end