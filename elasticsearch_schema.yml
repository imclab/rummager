synonyms: &synonyms [
  # Equivalent synonyms

  "abroad, overseas",
  "adviser, advisor",
  "antisocial, anti-social",
  "apply, claim",
  "appointeeship, appointee",
  "attorney, deputy",
  "bank holiday, bank holidays, public holiday, public holidays",
  "bankrupt, bankruptcy",
  "businesslink, business link",
  "car tax, vehicle tax, tax disc, vehicle licence",
  "car tax bands, vehicle tax rates",
  "complain, complaint",
  "countersignature, countersign",
  "death, bereavement",
  "emissions, pollution",
  "epetition, epetitions, petition",
  "fees, costs, prices",
  "firstbuy, first buy",
  "hazardous substances, dangerous substances",
  "holiday pay, holiday entitlement",
  "jobcentre, job centre",
  "licence, license",
  "log in, login",
  "motorbike, motorcycle",
  "pension forecast, pension statement",
  "practical driving test, practical test",
  "practice, practise",
  "reduction, discount",
  "renew, expired, out of date",
  "self-employed, self employed, self-employment, self employment, sole trader, starting up a business",
  "sickness, sick, illness, ill",
  "social fund, budgeting loans, crisis loans",
  "streetlight, street light",
  "tariff classification, trade tariff",
  "tariff codes, commodity codes",
  "trademark, trade mark",
  "vat registration, de-registration, deregistration",
  "will, wills",
  "work experience, internship, interns",

  "one, 1",
  "two, 2",
  "three, 3",
  "four, 4",
  "five, 5",
  "six, 6",
  "seven, 7",
  "eight, 8",
  "nine, 9",
  "ten, 10",

  # Acronyms

  "crb, criminal records bureau, dbs, disclosure and barring service",
  "cwp, cold weather payment",
  "dada, dance and drama awards",
  "dda, disability discrimination act",
  "dhp, discretionary housing payment",
  "eccn, export control classification number",
  "eco, energy company obligation",
  "eis, enterprise investment scheme",
  "fco, foreign and commonwealth office",
  "fcoc, future character of conflict",
  "jsa, jobseekerâ€™s allowance",
  "lha, local housing allowance",
  "nea, new enterprise allowance",
  "ospp, ordinary statutory paternity pay",
  "pcdl, professional and career development loan",
  "pilon, payment in lieu of notice, pay in lieu of notice",
  "rti, real time information",
  "sap, statutory adoption pay",
  "slc, student loans company",
  "spp, statutory paternity pay",
  "ukti, uk trade and investment",
  "utr, unique taxpayer reference",

  # Various bits of unofficial and run-together terminology

  "bedroom tax => bedroom, housing benefit",
  "bluebadge => blue badge",
  "buyerbeware => buying a used car",
  "carersallowance => carer's allowance",
  "checkdrivercpc => check driver cpc",
  "coldweather => cold weather",
  "coldweatherpayment, coldweatherpayments => cold weather payment",
  "crisisloan => crisis loan",
  "death duty => inheritance tax",
  "digi => digital",
  "digicard => digital tachograph",
  "direct gov => directgov",
  "dole => jobseeker's allowance",
  "drivercpc => driver cpc",
  "driverhealth => driving health",
  "drivingtest => driving test",
  "dvlalocal => dvla local",
  "enterprise allowance => new enterprise allowance",
  "euets => eu ets",
  "firesafetyguides => fire safety guides",
  "governmentgateway => gateway",
  "greendeal => green deal",
  "incomesupport => income support",
  "independent safeguarding authority => disclosure and barring service",
  "inland revenue => hmrc, hm revenue customs",
  "jcponline => jobcentre plus",
  "jobgrant => job grant",
  "jobseekersallowance => jobseeker's allowance",
  "journeyplanner => journey planner",
  "jsaol, jsaonline, jsa online => jobseeker's allowance",
  "makeasorn => make a sorn",
  "motoringforms => motoring forms",
  "ni => national insurance",
  "nin, nino => national insurance number",
  "nvq => further education courses",
  "old age pension => state pension",
  "payacourtfine => pay a court fine",
  "paycourtfine => pay a court fine",
  "pensioncredit => pension credit",
  "pensionforecast => pension forecast",
  "photorenewal => photo renewal",
  "reg => registration",
  "renewal70 => renew 70",
  "renewalat70 => renew 70",
  "renewat70 => renew 70",
  "renewmyphoto => renew photo",
  "road tax => car tax, vehicle tax, tax disc, vehicle licence",
  "s2p => state second pension",
  "sf => student finance",
  "sfe => student finance england",
  "sfform => student finance form",
  "sfforms => student finance forms",
  "sickpay => sick pay",
  "sign on, signing on => jobseeker's allowance",
  "simplepayment => simple payment",
  "socialfund => social fund",
  "spol => state pension online",
  "ss form, ssform => student finance form",
  "ss forms, ssforms => student finance forms",
  "statepension => state pension",
  "statepensiononline => state pension",
  "stayinsured => uninsured vehicles",
  "studentfinance => student finance",
  "surestart => sure start",
  "tacho => tachograph",
  "uj, ujm => uj, ujm, universal jobmatch",
  "unemployment benefit => jobseeker's allowance",
  "unique tax => unique taxpayer",
  "universal jobsearch => universal jobmatch",
  "universaljobmatch => universal jobmatch",
  "unsorn => sorn",
  "vehiclereg => vehicle registration",
  "warmfront => warm front",
  "warmhome => warm home",
  "winterfuel => winter fuel",
  "winterfuelallowance => winter fuel payment",
  "winterfuelpayment => winter fuel payment",
  "workplacepensions => workplace pensions",
  "yourmotcheck => mot check",
  "xmas => christmas",

  # Additional terms

  "book driving test => book driving test, book your practical driving test",
  "bursaries, bursary => bursaries, bursary, extra, university",
  "child care => child care, childcare",
  "compassionate => compassionate, dependants",
  "copyright => copyright, intellectual property",
  "drivers licence => drivers licence, driving licence",
  "driving test => driving test, driving or riding test",
  "dss => dss, dwp",
  "easter => easter, paid early",
  "employer direct => employer direct, universal jobmatch",
  "fired => fired, dismissed, dismissal",
  "firing => firing, dismiss, dismissing, dismissal",
  "getaway => getaway, gateway",
  "green deal => green deal, green deal energy saving, energy grants, heating",
  "heating => heating, energy grants, energy saving, cold, warm, winter",
  "help to buy => home ownership",
  "holiday payment, holiday payments => holiday payment, holiday payments, paid early",
  "how much => how much, fees, rates",
  "intestate, intestacy => intestate, intestacy, wills, inherits",
  "ir35 => ir35, employment status",
  "job match => job match, jobmatch",
  "job share, job sharing => job share, job sharing, flexible working",
  "jobmatch => jobmatch, find a job",
  "maintenance grant => maintenance grant, student finance",
  "new enterprise allowance => new enterprise allowance, start work, business idea",
  "next step, nextstep => next step, careers",
  "opening times => opening times, opening hours",
  "passport, passports => passport, replace your adult passport, child, fees",
  "permitted work => employment and support allowance",
  "rapid claim => rapid claim, rapid reclaim, jobseeker's allowance",
  "rapid reclaim => rapid reclaim, jobseeker's allowance",
  "ref number => ref number, reference number",
  "refuse collection => refuse collection, rubbish collection",
  "repossession => repossession, eviction",
  "reversing => reversing, 159",  # prioritise Highway Code (rules 159 to 203)
  "sanctions => sanctions, jobseeker's allowance sanctions",
  "school, schools => school, closures",
  "self assessment => self assessment, self assessment tax return, register for self assessment",
  "self certification, self certificate, self cert => self-certification, sick pay",
  "sign off, signing off, starting work => sign off, signing off, starting work, from benefits to work, return to work, adviser",
  "snow, snow code => snow, ice, grit, winter, weather, closures",
  "social security => social security, benefits",
  "starting a company => starting a company, starting a business",
  "student finance => student finance, student finance calculator, student loans, student grants, apply or support, log in",
  "support an application => support an application, how to apply for student finance",
  "tax payer => tax payer, taxpayer",
  "trade => trade, trade tariff, ukti",
  "ukti => ukti, uk trade and investment, help for exporters, starting to export, uk welcomes",
  "under-occupancy, under occupancy, underoccupancy  => under-occupancy, under occupancy, underoccupancy, bedroom, housing benefit",
  "utr, unique taxpayer reference => utr, unique taxpayer reference, register for self assessment",
  "wales => wales, cymru, cymraeg, gymraeg",
  "weather, bad weather, winter weather => weather, cold weather, severe weather, winter weather, energy grants, heating",
  "welsh => welsh, cymraeg, gymraeg",
  "winter payment, winter payments => winter fuel payment, cold weather, warm home, energy saving, energy grants, heating",
  "work trial => work trial, work experience, recruiters",

  # Forms and leaflets

  "br1, br 1 => state pension claim",
  "br19, br 19 => state pension forecast",
  "cwf1 => register for self assessment",
  "d184 => divorce",
  "d46p => d46p, renew 70",
  "d786b => digital tachograph driver smart card",
  "d798 => d798, renewal reminder",
  "esa3, esa50 => employment and support allowance",
  "ex321 => make a court claim for money, enforce a judgment",
  "ex50 => court fees",
  "gv 262 => gv262, drivers hours",
  "inf1d => driving licence application",
  "inf2d => driving licence lorry or bus",
  "inf4d => driving licence medical condition",
  "inf5d => driving licence renewal",
  "inf38 => non-gb licence",
  "ins160 => vehicle registration certificate",
  "lso1 => ls01",
  "mi12 => mi12, mortgage interest",
  "ni17a => maternity benefits",
  "p38s => student holiday job",
  "pa3, pa4 => probate",
  "pd2 => passports change your name",
  "pff, pff2, pn1, pr1 => student finance forms",
  "pw1 => permitted work",
  "r27 => after someone dies",
  "sc1 => sc1, incapacity benefit",
  "sc2 => sc2, statutory sick pay",
  "ssp1, e14 => statutory sick pay employer",
  "v100 => vehicle registration",
  "v149 => vehicle tax rates",
  "v5 => v5, v5c",
  "v888 => v888, vehicle information",
  "v890 => sorn",
  "vat1, vat 1, vat2, vat 2, vat50, vat 50, vat51, vat 51, vat1a, vat 1a, vat1b, vat 1b => vat registration",
  "vat 7 => vat7",
  "vc5 => vc5, v5c",

  # Common misspellings (in lieu of a "did you mean" filter)

  "addres => address",
  "adress => address",
  "alljobs => all jobs",
  "allowence => allowance",
  "alowance => allowance",
  "anullment => annulment",
  "aplication => application",
  "applicaton => application",
  "apprentaship => apprenticeship",
  "apprentaships => apprenticeships",
  "apprentership => apprenticeship",
  "apprenterships => apprenticeships",
  "apprenticship => apprenticeship",
  "apprenticships => apprenticeships",
  "apprentiship => apprenticeship",
  "apprentiships => apprenticeships",
  "assesment => assessment",
  "atten => attendance",
  "attendace => attendance",
  "attendence => attendance",
  "attorny => attorney",
  "baliff => bailiff",
  "baliffs => bailiffs",
  "bancruptcy => bankruptcy",
  "bankcruptcy => bankruptcy",
  "bankholiday, bankholidays => bank holidays",
  "bankrupcy => bankruptcy",
  "bankrupsy => bankruptcy",
  "bankruptsy => bankruptcy",
  "bankrupty => bankruptcy",
  "bene => benefit",
  "benfit => benefit",
  "benfits => benefits",
  "benifit => benefit",
  "benifits => benefits",
  "bereavment => bereavement",
  "berevement => bereavement",
  "berevment => bereavement",
  "breavement => bereavement",
  "budgetting => budgeting",
  "buget => budget",
  "bugeting => budgeting",
  "buisness => business",
  "bursery => bursary",
  "businessplan => business plan",
  "buspass => bus pass",
  "calculater => calculator",
  "cartax => car tax",
  "center => centre",
  "chang => change",
  "cheif => chief",
  "childrens => children",
  "childs => child",
  "comunity => community",
  "contactor => contractor",
  "cossh => coshh",
  "crisi => crisis",
  "crissis => crisis",
  "c v => cv",
  "diability => disability",
  "disabilty => disability",
  "dismisal => dismissal",
  "divorse => divorce",
  "drivi => driving",
  "drivin => driving",
  "fianance => finance",
  "fiance => finance",
  "finace => finance",
  "forcast => forecast",
  "goverment => government",
  "grafitti => graffiti",
  "harrasment => harassment",
  "harrassment => harassment",
  "houseing => housing",
  "incapasity => incapacity",
  "inco => income",
  "incom => income",
  "insuranc => insurance",
  "insurence => insurance",
  "interveiw => interview",
  "job center => jobcentre",
  "job centre => jobcentre",
  "job seekers => jobseekers",
  "job serch => job search",
  "jobcenter => jobcentre",
  "jobcenterplus => jobcentre plus",
  "jobcentreplus => jobcentre plus",
  "jobmach => jobmatch",
  "jobseach => job search",
  "jobseakers => jobseekers",
  "jobsearch => job search",
  "jobserch => job search",
  "jobsmatch => jobmatch",
  "jpbs => jpbs, jobs",
  "knifes => knives",
  "licience => licence",
  "liscence => licence",
  "maintance => maintenance",
  "maternaty => maternity",
  "milage => mileage",
  "mimimum => minimum",
  "minimun => minimum",
  "minium => minimum",
  "minumum => minimum",
  "morgage => mortgage",
  "mortage => mortgage",
  "motobility => motability",
  "motorbility => motability",
  "nationa => national",
  "numbe => number",
  "offical => official",
  "pasport => passport",
  "passpor => passport",
  "pention => pension",
  "pentions => pensions",
  "perscriptions => prescriptions",
  "pot hole => pothole",
  "pra => practical",
  "pract => practical",
  "pratical => practical",
  "pregancy => pregnancy",
  "provisonal => provisional",
  "questionaire => questionnaire",
  "re claim => reclaim",
  "redudancy => redundancy",
  "redun => redundancy",
  "redunancy => redundancy",
  "redundacy => redundancy",
  "redundancey => redundancy",
  "redundnacy => redundancy",
  "redundency => redundancy",
  "referance => reference",
  "roadtax => vehicle tax",
  "saftey => safety",
  "school closers => school closures",
  "scorn => sorn",
  "seach => search",
  "selfassessment => self assessment",
  "selfemployed => self-employed",
  "selfemployment => self-employment",
  "seperation => separation",
  "serach => search",
  "soletrader => sole trader",
  "statuatory => statutory",
  "stu => student",
  "stude => student",
  "studen => student",
  "suport => support",
  "suppor => support",
  "surport => support",
  "sworn => sworn, sorn",
  "tacograph => tachograph",
  "tarif => tariff",
  "tarifs => tariffs",
  "tarrif => tariff",
  "tarrifs => tariffs",
  "tarriff => tariff",
  "tarriffs => tariffs",
  "taxdisc => tax disc",
  "taxdisk => tax disc",
  "tax disk => tax disc",
  "theroy => theory",
  "thoery => theory",
  "univeral => universal",
  "wearhouse => warehouse",
  "wether => whether, weather",
  "wharehouse => warehouse",
  "wheather => whether, weather",

  # Temporary fix for Inside Government in general results
  "government gateway => gateway",

  # Temporary fix for payroll terms
  "480 => 480, payroll",
  "ca38 => ca38, payroll",
  "cwg2 => cwg2, payroll",
  "dispensation => dispensation, payroll",
  "e11 => e11, payroll",
  "mileage => mileage, payroll",
  "paye => paye, payroll",
  "psa => psa, payroll",
  "p11 => p11, payroll",
  "p11d => p11d, paye, payroll",
  "p11dx => p11dx, payroll",
  "p14 => p14, payroll",
  "p32 => p32, payroll",
  "p35 => p35, payroll",
  "p38 => p38, payroll",
  "p45 => p45, paye, payroll",
  "p46 => p46, paye, payroll",
  "p60 => p60, paye, payroll",
  "salary sacrifice => salary sacrifice, payroll",
  "smp => smp, payroll",
  "ssp => ssp, payroll",
  "ssp1 => ssp1, payroll",
  "tax calculator => tax calculator, payroll",
  "tax refund => tax refund, payroll",

  # Temporary fix for career-specific job searches
  # TODO: Remove this once we have support for alternative keywords in Panopticon
  "admin => admin, find a job",
  "all jobs => all jobs, find a job",
  "catering => catering, find a job",
  "chef => chef, find a job",
  "christmas jobs => christmas jobs, find a job",
  "cleaner => cleaner, find a job",
  "cleaners => cleaners, find a job",
  "cleaning => cleaning, find a job",
  "job => job, find a job",
  "jobs => jobs, find a job",
  "jobsearch => job search, find a job",
  "joiner => joiner, find a job",
  "labourer => labourer, find a job",
  "labouring => labouring, find a job",
  "local jobs => local jobs, find a job",
  "packing => packing, find a job",
  "plumber => plumber, find a job",
  "plumbing => plumbing, find a job",
  "receptionist => receptionist, find a job",
  "retail => retail, find a job",
  "royal mail => royal mail, find a job",
  "sales => sales, find a job",
  "security => security, find a job",
  "vacancies => vacancies, find a job",
  "waitress => waitress, find a job",
  "warehouse => warehouse, find a job",
  "warehousing => warehousing, find a job"
]


stems: &stems [
  "community => community",
  "directive => directive",
  "directives => directive",
  "equalities => equality",
  "equality => equality",
  "housing => housing",
  "intern => intern",
  "interns => intern",
  "internal => internal",
  "international => international",
  "paye => paye",
  "permitted => permitted",
  "probate => probate",
  "publication => publication",
  "publications => publication",
  "saving => saving",
  "savings => savings",
  "signing => signing",
  "universal => universal"
]


index:
  settings:
    analysis:
      analyzer:
        default:  # Indexing analyzer: doesn't use custom synonyms
          type: custom
          tokenizer: standard
          filter: [standard, lowercase, stop, stemmer_english]
        query_default:
          type: custom
          tokenizer: standard
          filter: [standard, lowercase, stop, synonym, stemmer_english, filter_shingle]
      filter:
        synonym:
          type: synonym
          synonyms: *synonyms
        stemmer_override:
          type: stemmer_override
          rules: *stems
        stemmer_english:
          type: stemmer
          name: englishmappings:
        filter_shingle:
          type: shingle
          max_shingle_size: 5
          min_shingle_size: 2
          output_unigrams: true
mappings:
  default:
    edition:
      _all: { enabled: true }
      properties:
        title:       { type: string, index: analyzed }
        description: { type: string, index: analyzed }
        format:      { type: string, index: not_analyzed, include_in_all: false }
        section:     { type: string, index: not_analyzed, include_in_all: false }
        subsection:  { type: string, index: not_analyzed, include_in_all: false }
        subsubsection:  { type: string, index: not_analyzed, include_in_all: false }
        link:        { type: string, index: not_analyzed, include_in_all: false }
        indexable_content: { type: string, index: analyzed }
  government:
    edition:
      _all: { enabled: true }
      properties:
        title:       { type: string, index: analyzed }
        description: { type: string, index: analyzed }
        indexable_content: { type: string, index: analyzed }
        format:      { type: string, index: not_analyzed, include_in_all: false }
        display_type: { type: string, index: not_analyzed, include_in_all: false }
        section:     { type: string, index: not_analyzed, include_in_all: false }
        subsection:  { type: string, index: not_analyzed, include_in_all: false }
        subsubsection:  { type: string, index: not_analyzed, include_in_all: false }
        link:        { type: string, index: not_analyzed, include_in_all: false }
        id:          { type: long, index: not_analyzed, include_in_all: false }
        organisations: { type: string, index: not_analyzed, include_in_all: false }
        document_series: { type: string, index: not_analyzed, include_in_all: false }
        people: { type: string, index: not_analyzed, include_in_all: false }
        topics: { type: string, index: not_analyzed, include_in_all: false }
        public_timestamp: { type: date, index: not_analyzed, include_in_all: false }
        search_format_types: { type: string, index: not_analyzed, include_in_all: false }
        relevant_to_local_government: { type: boolean, index: not_analyzed, include_in_all: false }
        world_locations: { type: string, index: not_analyzed, include_in_all: false }
